#!/bin/bash -x
 
#
# Update script for blacklist update in IPset
# Uses same mechanism as ipset_updater but uses now update-ipset´s from firehol project
# ummeegge[at]ipfire.org $date: 01.01.2015
#######################################################################################
#

## Locations
CONFDIR="/etc/ipset";
CONF="${CONFDIR}/ipset.conf";
FCOUNTER="${CONFDIR}/counterlist_firehol_ipset";
IPSET="/usr/sbin/ipset";
DIR="/tmp/update-ipsets"
FCIDR="${DIR}/FCIDR";
FIP="${DIR}/FIP";
SETFCIDR="fcidr";
SETFIP="fip";
FWL="/etc/sysconfig/firewall.local";
SET="/var/ipfire/ethernet/settings";
OVPNSUB="/var/ipfire/ovpn/server.conf";
RC="/etc/sysconfig/rc.local";
# Add Fireholes update-ipsets files
FHOL="/etc/firehol/ipsets";

#----------------------------------------------------------------------------------------------------------------

## Investigate system addresses to prevent potential blocks
# LAN, WLAN, DMZ, DNS and OpenVPN addresses
USEDADDRESSES=$(awk -F'=' '/GREEN_ADDRESS/ || /BLUE_ADDRESS/ || /RED_ADDRESS/ || /ORANGE_ADDRESS/ { print $2 }' ${SET} | \
cut -d'.' -f1,2 && \
awk -F'=' '/DNS1=/ || /DNS2=/ { print $2 }' ${SET} && \
awk '/server / || /route / { print $2 }' ${OVPNSUB} | sed 's/.0$//g')
OWNAD=$(echo "${USEDADDRESSES}" | tr ' ' '\n' | sort -nu);

## FW functions
# Searcher
# Start
STARTFW=$(grep "\${UIPSET}" ${FWL} | echo $?);
# Stop
STOPFW=$(grep "\${UIPSET}" ${FWL} | echo $?);

fwadd_funct() {
  if [ "${STARTFW}" -eq 0 ]; then
   sed -i '/# Used for private firewall rules/ a\UIPSET="\/sbin\/iptables"' ${FWL};
   sed -i "/start)/ a\\ \
       # IPSET ### This block is automatically generated by /etc/fcron.daily/ipset-firehol.sh ### PLEASE DO NOT CHANGE IT HERE\\n \
       # IPSET FW entries in start\\n \
       # IPSET add rules for CIDR list\\n \
       \${UIPSET} -I CUSTOMFORWARD -m set --match-set ${SETFCIDR} dst -j REJECT\\n \
       \${UIPSET} -I CUSTOMINPUT -m set --match-set ${SETFCIDR} src -j REJECT\\n \
       \${UIPSET} -I CUSTOMOUTPUT -m set --match-set ${SETFCIDR} dst -j REJECT\\n \
       # IPSET rules for ip list\\n \
       \${UIPSET} -I CUSTOMFORWARD -m set --match-set ${SETFIP} dst -j REJECT\\n \
       \${UIPSET} -I CUSTOMINPUT -m set --match-set ${SETFIP} src -j REJECT\\n \
       \${UIPSET} -I CUSTOMOUTPUT -m set --match-set ${SETFIP} dst -j REJECT\\n \
       # IPSET ### End automatic generated block" ${FWL};
       # Add stop rules
   sed -i "/stop)/ a\\ \
       # IPSET ### This block is automatically generated by /etc/fcron.daily/ipset-firehol.sh ### PLEASE DO NOT CHANGE IT HERE\\n \
       # IPSET flushing related chains\\n \
       \${UIPSET} -F CUSTOMFORWARD\\n \
       \${UIPSET} -F CUSTOMINPUT\\n \
       \${UIPSET} -F CUSTOMOUTPUT\\n \
       # IPSET ### End automatic generated block" ${FWL};
  fi
}

fwstop_funct() {
  if [ "${STOPFW}" -eq 0 ]; then
   # Delete IPset related entries
   sed -i -e "/\${UIPSET}.*/d" -e "/# IPSET.*/d" -e "/UIPSET.*/d" ${FWL};
  fi
}

#----------------------------------------------------------------------------------------------

# Check for installation
if [[ ! -e "${IPSET}" ]]; then
   echo "Haven´t found an IPset installation on this system, need to quit... ";
   exit 1;
fi

# Check for update-ipsets installation
if [[ ! -e "${FHOL}" ]]; then
   echo "Haven´t found an update-ipsets installation on this system, need to quit... ";
   exit 1;
fi   

# Create appropriate sets with counter if not already done
if [[ -z "$(ipset -n list | grep ${SETFCIDR})" ]]; then
   ipset create ${SETFCIDR} hash:net counters;
fi
if [[ -z "$(ipset -n list | grep ${SETFIP})" ]]; then
   ipset create ${SETFIP} hash:ip counters;
fi

# Check for rc.local entry
if ! grep -q 'ipset' ${RC}; then
      echo "${IPSET} restore < ${CONF}" >> ${RC} && /etc/sysconfig/firewall.local reload;
fi

# Check for ip_set module
if lsmod | grep -q ip_set; then
   modprobe ip_set;
fi

## Check for conf dir and counter list
if [[ ! -d "${CONFDIR}" ]]; then
   mkdir ${CONFDIR};
elif [[ ! -e  "{CONF}" ]]; then
   touch ${CONF};
elif [[ ! -e "${FCOUNTER}" ]]; then
   touch ${FCOUNTER};
fi

#-----------------------------------------------------------------------------------------------
# Start processing

# Check if entries exist
if [[ -n "$(ipset list | tail -1)" ]]; then
   # Prepare firewall.local
   fwstop_funct;
   ${FWL} reload;
   # Write to counter list before flushing the sets if packet counter ! 0
   if [[ -n $(ipset list | sed -e '/packets 0/d' -e '/^[^0-9]/d' -e '/^$/d') ]]; then
       echo -e "\e[31m$(date)\e[0m" >> ${FCOUNTER} \
       && ipset list | sed -e '/packets 0/d' -e '/^[^0-9]/d' -e '/^$/d' >> ${FCOUNTER};
   else
       echo -e "\e[31m$(date)\e[0m" >> ${FCOUNTER};
       echo "No entries today" >> ${FCOUNTER};
   fi
   # Flushing existing sets
   ipset flush ${SETFCIDR};
   ipset flush ${SETFIP};
fi

# Check for installation directory
if [ -d "${DIR}" ]; then
   rm -rvf ${DIR};
   mkdir -v ${DIR};
else
   mkdir -v ${DIR};
fi

#------------------------------------------------------------------------------------------------

## Start update-ipsets script
update-ipsets -s 2>&1 | tee ${DIR}/update.log;

## Find IP files in ipsets dir which are updated in the last 30 minutes
MODIPLISTS=$(find "${FHOL}" -name '*.ipset');
## Find CIDR files in ipsets dir which are updated in the last
MODCIDRLISTS=$(find "${FHOL}" -name '*.netset');

# Process list(s)
cd ${DIR} || exit 1;
############################################ Get all IPs ########################################
# grep IPs and sort and make them uniq
cat ${MODIPLISTS} ${MODCIDRLISTS} | grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}" | \
sort -nu > ${FIP};
########################################### Get all CIDRs #######################################
# grep CIDRs and sort and make them uniq
cat ${MODCIDRLISTS} ${MODIPLISTS} | grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}/[0-9]{1,2}" | \
sort -nu > ${FCIDR}
#################################################################################################
# Clean up and sort LAN, WLAN, DNS and OpenVPN addresses out
sed -i -e 's/^M//g' -e '/#/d' -e '/^$/d' -e '/0.0.0.0.*/d' -e '/127.0.0.*/d' ${FCIDR} ${FIP};
for i in ${OWNAD}; do
    sed -i "/${i}/d" ${FCIDR} ${FIP};
done

# Introduce new content to IPset and add downloaded lists if needed
for l in $(cat ${FCIDR}); do ipset --add ${SETFCIDR} "${l}"; done;
for l in $(cat ${FIP}); do ipset --add ${SETFIP} "${l}"; done;
# Save the new lists
ipset save > ${CONF};
logger -t ipset "IPset: Firehol blacklists has been updated... ";

fwadd_funct;
${FWL} reload;
# Clean up
rm -rf ${DIR};

exit 0

# End script
